{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Escritorio\\\\curso_de_react\\\\practicas\\\\lista_tareas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport Header from './componentes/header';\nimport React, { useState, useEffect } from 'react';\nimport ListaTareas from './componentes/ListaTareas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // queremos acceder a localstorage, al item 'tareas' \n  const tareasGuardadas = localStorage.getItem('tareas') ? JSON.parse(localStorage.getItem('tareas')) //si hay algun elemento entonces sera igual a localstorage y lo transformamos a arreglo \n  : []; //si no hay  algun elemento entonces retorna nada\n\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n  useEffect(() => {\n    // Codigo\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n  // primero mostrar o no las tardes, segundo campo para cambiar el mostrar las tareas completadas\n  const [mostrarCompletadas, cambiarMostarCompletadas] = useState(true);\n  useEffect(() => {\n    // Codigo\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n  useEffect();\n  console.log(tareas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenedor\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mostrarCompletadas: mostrarCompletadas,\n      cambiarMostarCompletadas: cambiarMostarCompletadas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormularioTareas, {\n      tareas: tareas,\n      cambiarTareas: cambiarTareas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListaTareas, {\n      tareas: tareas,\n      cambiarTareas: cambiarTareas,\n      mostrarCompletadas: mostrarCompletadas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hHaMedMjfnvsuZUvdozlMZJQisE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["FormularioTareas","Header","React","useState","useEffect","ListaTareas","App","tareasGuardadas","localStorage","getItem","JSON","parse","tareas","cambiarTareas","setItem","stringify","mostrarCompletadas","cambiarMostarCompletadas","toString","console","log"],"sources":["C:/Users/crist/OneDrive/Escritorio/curso_de_react/practicas/lista_tareas/src/App.js"],"sourcesContent":["import './App.css';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport Header from './componentes/header';\nimport React, { useState, useEffect } from 'react';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App = () => {\n  // queremos acceder a localstorage, al item 'tareas' \n  const tareasGuardadas = \n  localStorage.getItem('tareas') ? \n  JSON.parse(localStorage.getItem('tareas')) //si hay algun elemento entonces sera igual a localstorage y lo transformamos a arreglo \n  : []; //si no hay  algun elemento entonces retorna nada\n\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  \n  \n  useEffect(() => {\n    // Codigo\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n  // primero mostrar o no las tardes, segundo campo para cambiar el mostrar las tareas completadas\n  const [mostrarCompletadas, cambiarMostarCompletadas] = useState(true);\n  useEffect(() => {\n    // Codigo\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n  useEffect()\n\n  console.log(tareas);\n\n  return (\n    <div className='contenedor'>\n      <Header\n        mostrarCompletadas={mostrarCompletadas}\n        cambiarMostarCompletadas={cambiarMostarCompletadas}\n      />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      {/* se le agrega la propiedad tareas para poder usar la lista de arriba en el componente listatareas */}\n      <ListaTareas\n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AAAC;AAEpD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAMC,eAAe,GACrBC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,GAC9BC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EAAA,EACzC,EAAE,CAAC,CAAC;;EAEN,MAAM,CAACG,MAAM,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACI,eAAe,CAAC;EAIzDH,SAAS,CAAC,MAAM;IACd;IACAI,YAAY,CAACM,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAACH,MAAM,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EACZ;EACA,MAAM,CAACI,kBAAkB,EAAEC,wBAAwB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACrEC,SAAS,CAAC,MAAM;IACd;IACAI,YAAY,CAACM,OAAO,CAAC,oBAAoB,EAAEE,kBAAkB,CAACE,QAAQ,EAAE,CAAC;EAC3E,CAAC,EAAE,CAACF,kBAAkB,CAAC,CAAC;EACxBZ,SAAS,EAAE;EAEXe,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EAEnB,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,wBACzB,QAAC,MAAM;MACL,kBAAkB,EAAEI,kBAAmB;MACvC,wBAAwB,EAAEC;IAAyB;MAAA;MAAA;MAAA;IAAA,QACnD,eACF,QAAC,gBAAgB;MAAC,MAAM,EAAEL,MAAO;MAAC,aAAa,EAAEC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAElE,QAAC,WAAW;MACV,MAAM,EAAED,MAAO;MACf,aAAa,EAAEC,aAAc;MAC7B,kBAAkB,EAAEG;IAAmB;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GAxCKV,GAAG;AAAA,KAAHA,GAAG;AA0CT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}